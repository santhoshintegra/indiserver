Short description of the PL2303 driver

== What's supported ==

  # PL2303 and newer PL2303HX-types (both tested) with ProductID 0x2303 and VendorID 0x067b
  # You can select one PL2303 out of multiple connected to your device
  # Serial parameters: Baudrate, Databits, Stopbits, Parity and something like basic RTS/CTS Flow-Control
  # Monitoring of Status-Lines DCD, DSR, RI and CTS
  # Switching of Control-Lines RTS and DTR

== What's NOT supported (at least at the moment)==

  # 3rd party PL2303 with different ProductID/VendorID
  # Selecting one specific PL2303 out of multiple connected ones, because most of them don't have a S/N and thus can't be uniquely identified. The Android USB-Host-API just numbers them in the order they were connected.
  # RFR/CTS, DTR/DSR and XON/XOFF Flow-Control

== What's NOT tested ==

  # Although implemented, I don't know if the code is able to cope with highspeed serial communication greater than 19200 Baud. 

== How to use it ==

  # include *PL2303driver.java* and *PL2303callback.java* in your project
  # the calling Activity/Function/whatsoever *must implement/override* the callback-methods *onInitSuccess, onInitFailed, onRI, onDCD, onDSR, onCTS* defined in PL2303callback.java!
  # call *getDeviceList(Arraylist)* to retrieve a list of all connected PL2303-devices - Mandatory, do this before open()!
  # call *open(Device)* to open a connection to one PL2303 out of the Arraylist
  # call *setup(Baudrate, Databits, Stopbits, Parity, Flowcontrol)* to setup the serial parameters
  # call *getInputStream()* to get the readable stream of all received bytes
  # call *getOutputStream()* to get the writable stream where you put all bytes to send
  # Optional: Use the Callbacks *onRI, onDCD, onDSR, onCTS* for the Status-Lines, if you need it - otherwise leave them empty
  # Optional: call *setRTS(boolean)* or *setDTR(boolean)* to switch Control-Lines on/off 
  # If your program is exited you should call *close()* 

===If you have any further questions don't hesitate to ask, if you think it could be done better let me know. ===